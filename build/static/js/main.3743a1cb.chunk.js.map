{"version":3,"sources":["styles/global.js","store/modules/cart/actions.js","store/modules/products/actions.js","services/api.js","utils/format.js","components/GridPlaceholder/GridPlaceholder.js","pages/Home/Home_Styles.js","components/ModalPlaceholder/styles.ts","components/ModalPlaceholder/index.tsx","components/ProductModal/styles.ts","components/ProductModal/index.tsx","pages/Home/index.js","pages/Home/Home.js","pages/Cart/Cart_Styles.js","pages/Cart/index.js","pages/Cart/Cart.js","routes.js","components/Header/Header_Styles.js","components/Header/index.js","components/Header/Header.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/products/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","services/history.js","App.js","index.js","assets/images/background.svg","assets/images/logo.svg"],"names":["createGlobalStyle","background","updateAmountRequest","id","amount","type","updateAmountSuccess","storeProducts","products","setProductStatus","status","api","axios","create","baseURL","process","formatPrice","Intl","NumberFormat","style","currency","format","GridPlaceholder","repeatCount","howMany","Array","from","keys","map","placeholder","key","alignSelf","height","width","display","justifyContent","alignItems","flex","color","highlightColor","defaultProps","ProductList","styled","ul","lighten","darken","Container","div","ModalPlaceholder","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","ProductModal","children","isOpen","toggleModal","selectedProductId","handleAddProduct","useState","modalIsOpen","setIsOpen","product","setProduct","useEffect","a","get","response","data","priceFormatted","price","loading","loadProduct","useSelector","state","cart","reduce","sumAmount","handleRequestClose","useCallback","onAfterClose","onRequestClose","contentLabel","Object","length","src","image","alt","title","onClick","size","Home","isOpenModal","setIsOpenModal","setSelectedProductId","dispatch","useDispatch","ProductActions","loadProducts","CartActions","main","EmptyCart","section","StartShopping","Link","ProductTable","table","Total","Cart","total","totalAmount","subtotal","to","decrement","readOnly","value","increment","Routes","exact","path","component","header","Header","cartSize","p","logo","combineReducers","action","produce","draft","push","productIndex","findIndex","splice","Number","addToCart","updateAmount","put","select","find","productExists","call","stock","stockAmount","currentAmount","toast","error","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","history","createBrowserHistory","App","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3743a1cb.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Ubuntu:400,700&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body {\n    height: 100vh;\n    overflow: auto;\n  }\n\n  body {\n    background: linear-gradient(-45deg, rgba(54,54,102,1) 0%, rgba(113,89,193,1) 100%);\n    -webkit-font-smoothing: antialiased;\n    color: #333;\n    position: relative;\n\n    &::before {\n      content: '';\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      background: url(${background}) no-repeat center -60px/101vw;\n      z-index: -5;\n\n      @media (max-width: 1200px) {\n        background: url(${background}) no-repeat center top;\n      }\n\n    }\n\n    &, input, button {\n      font: 14px 'Ubuntu', -apple-system, BlinkMacSystemFont, \"Segoe UI\", sans-serif;\n    }\n\n  }\n\n  #root{\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","export function addToCartRequest(id) {\n  return {\n    type: '@cart/ADD_REQUEST',\n    id,\n  };\n}\n\nexport function addToCartSuccess(product) {\n  return {\n    type: '@cart/ADD_SUCCESS',\n    product,\n  };\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: '@cart/REMOVE',\n    id,\n  };\n}\n\nexport function updateAmountRequest(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\n    id,\n    amount,\n  };\n}\n\nexport function updateAmountSuccess(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\n    id,\n    amount,\n  };\n}\n","export function storeProducts(products) {\n  return {\n    type: '@products/STORE_PRODUCTS',\n    products,\n  };\n}\n\nexport function setProductStatus(id, status) {\n  return {\n    type: '@products/SET_PRODUCT_STATUS',\n    id,\n    status,\n  };\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nexport default api;\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function GridPlaceholder({ repeatCount }) {\n  const howMany = Array.from(Array(repeatCount).keys());\n  return (\n    <>\n      {howMany.map(placeholder => (\n        <li key={placeholder}>\n          <figure style={{ alignSelf: 'center' }}>\n            <Skeleton height={249} />\n          </figure>\n          <strong>\n            <Skeleton width={220} />\n            <Skeleton width={150} />\n          </strong>\n          <div>\n            <span>\n              <Skeleton width={100} />\n            </span>\n            <button type=\"button\">\n              {/* <SkeletonTheme color=\"#7159c1\" highlightColor=\"#444\">\n                <Skeleton width={26} />\n              </SkeletonTheme> */}\n\n              <span style={{ height: 40, display: 'flex', justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n                <SkeletonTheme color=\"#997df5\" highlightColor=\"#8a6cea\">\n                  <Skeleton width={92} />\n                </SkeletonTheme>\n              </span>\n            </button>\n          </div>\n        </li>\n      ))}\n    </>\n  );\n}\n\nGridPlaceholder.propTypes = {\n  repeatCount: PropTypes.number,\n};\n\nGridPlaceholder.defaultProps = {\n  repeatCount: 1,\n};\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style-type: none;\n\n  @media (max-width: 945px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 490px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n    cursor: pointer;\n\n    &:hover figure img {\n      opacity: 0.9;\n    }\n\n    figure {\n      display: flex;\n      justify-content: center;\n      position: relative;\n      width: 100%;\n      max-height: 250px;\n      padding-top: 91%;\n      text-align: center;\n\n      @media (max-width: 490px) {\n        padding-top: 60%;\n      }\n\n      img,\n      span {\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        max-height: 100%;\n        margin: auto;\n        transition: opacity 150ms ease-in-out;\n      }\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      margin-top: 5px;\n\n      + div {\n        display: flex;\n        flex-direction: column;\n        margin-top: auto;\n\n        > span {\n          font-size: 21px;\n          font-weight: bold;\n          margin: 5px 0 20px;\n        }\n\n        button {\n          background: #7159c1;\n          color: #fff;\n          border: 0;\n          border-radius: 4px;\n          overflow: hidden;\n          position: relative;\n\n          display: flex;\n          align-items: center;\n          transition: 180ms ease-in-out;\n\n          &:hover {\n            background: ${lighten(0.04, '#7159c1')};\n          }\n\n          &:active {\n            background: ${darken(0.04, '#7159c1')};\n          }\n\n          > div:first-child {\n            display: flex;\n            align-items: center;\n            padding: 12px;\n            background: rgba(0, 0, 0, 0.1);\n            position: absolute;\n\n            @media (max-width: 680px) {\n              position: initial;\n            }\n\n            @media (max-width: 490px) {\n              position: absolute;\n            }\n\n            @media (max-width: 360px) {\n              position: initial;\n            }\n\n            svg {\n              margin: 0 5px;\n            }\n          }\n\n          > span:nth-child(2) {\n            padding: 12px;\n            flex: 1;\n            text-align: center;\n            font-weight: bold;\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 5%;\n  display: flex;\n  justify-content: space-between;\n\n  img {\n    width: 360px;\n  }\n\n  aside {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    margin-left: 10%;\n  }\n`;\n","import React from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { Container } from './styles';\n\nconst ModalPlaceholder: React.FC = () => {\n  return (\n    <Container>\n      <Skeleton width={360} height={349} />\n\n      <aside>\n\n        <div>\n          <Skeleton width={312} height={30} />\n\n\n          <Skeleton width={80} height={35} />\n        </div>\n        <Skeleton width={312} height={50} />\n      </aside>\n    </Container>\n  );\n}\n\nexport default ModalPlaceholder;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 5%;\n  display: flex;\n  justify-content: space-between;\n\n  img {\n    width: 360px;\n  }\n\n  aside {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 356px;\n\n    div {\n      h1 {\n        font-size: 20px;\n      }\n\n      h2 {\n        font-size: 25px;\n        font-weight: 500;\n        margin-top: 10px;\n      }\n    }\n\n    button {\n      width: 100%;\n      height: 15%;\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      position: relative;\n\n      display: flex;\n      align-items: center;\n      transition: 180ms ease-in-out;\n\n      &:hover {\n        background: ${lighten(0.04, '#7159c1')};\n      }\n\n      &:active {\n        background: ${darken(0.04, '#7159c1')};\n      }\n\n      > div:first-child {\n        display: flex;\n        align-items: center;\n        padding: 18px;\n        background: rgba(0, 0, 0, 0.1);\n        position: absolute;\n\n        @media (max-width: 680px) {\n          position: initial;\n        }\n\n        @media (max-width: 490px) {\n          position: absolute;\n        }\n\n        @media (max-width: 360px) {\n          position: initial;\n        }\n\n        svg {\n          margin: 0 5px;\n        }\n      }\n\n      > span:nth-child(2) {\n        padding: 12px;\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport api from '../../services/api';\nimport Loader from 'react-loader-spinner';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../utils/format';\nimport ModalPlaceholder from '../../components/ModalPlaceholder';\n\nimport { Container } from './styles';\n\ninterface IModalProps {\n  isOpen: boolean;\n  children?: any;\n  toggleModal: () => void;\n  selectedProductId: string;\n  handleAddProduct: (id: number) => void;\n}\n\ninterface IProduct {\n  id: number;\n  image: string;\n  price: number;\n  title: string;\n  priceFormatted: string;\n  loading: boolean;\n}\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    width: '72%',\n    height: '70%',\n  }\n};\n\nModal.setAppElement('#root')\n\nconst ProductModal: React.FC<IModalProps> = ({\n  children,\n  isOpen,\n  toggleModal,\n  selectedProductId,\n  handleAddProduct,\n}) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState<IProduct>({} as IProduct);\n\n  useEffect(() => {\n      async function loadProduct() {\n        const response = await api.get(`products/${selectedProductId}`);\n  \n        setProduct({\n          ...response.data,\n          priceFormatted: formatPrice(response.data.price),\n          loading: false,\n        });\n      }\n\n      if (selectedProductId) {\n\n        loadProduct();\n      }\n  }, [selectedProductId]);\n\n  useEffect(() => {\n    setIsOpen(isOpen);\n  }, [isOpen]);\n\n  const amount = useSelector((state: any) =>\n    state.cart.reduce((sumAmount: any, product: any) => {\n      sumAmount[product.id] = product.amount;\n\n      return sumAmount;\n    }, {})\n  );\n\n  const handleRequestClose = useCallback(() => {\n    setProduct({} as IProduct);\n  }, []);\n\n  return (\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterClose={handleRequestClose}\n        onRequestClose={toggleModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        {\n          Object.keys(product).length === 0 ? (\n            <ModalPlaceholder />\n          ) : (\n            <Container>\n              <img src={product.image} alt={product.title} />\n\n              <aside>\n\n                <div>\n                  <h1\n                    key={product.id}\n                  >\n                    {product.title}\n                  </h1>\n\n                  <h2>{product.priceFormatted}</h2>\n\n                </div>\n                <button type=\"button\" onClick={() => handleAddProduct(product.id)}>\n                  {product.loading ? (\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={24} />\n                  ) : (\n                    <div>\n                      <MdAddShoppingCart size={16} color=\"#FFF\" />\n                      {amount[product.id] || 0}\n                    </div>\n                  )}\n\n                  <span>ADD TO CART</span>\n                </button>\n              </aside>\n            </Container>\n          )\n        }\n      </Modal>\n  );\n}\n\nexport default ProductModal;","import Home from './Home';\n\nexport default Home;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport Loader from 'react-loader-spinner';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport * as ProductActions from '../../store/modules/products/actions';\nimport api from '../../services/api';\nimport { formatPrice } from '../../utils/format';\nimport GridPlaceholder from '../../components/GridPlaceholder/GridPlaceholder';\nimport { ProductList } from './Home_Styles';\nimport ProductModal from '../../components/ProductModal/index';\n\nexport default function Home() {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n\n  const toggleModal = useCallback((id) => {\n    setIsOpenModal(!isOpenModal);\n    setSelectedProductId(id);\n  }, [isOpenModal]);\n\n  const products = useSelector(state => state.products);\n\n  const amount = useSelector(state =>\n    state.cart.reduce((sumAmount, product) => {\n      sumAmount[product.id] = product.amount;\n\n      return sumAmount;\n    }, {})\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n\n      const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n        loading: false,\n      }));\n\n      dispatch(ProductActions.storeProducts(data));\n    }\n\n    loadProducts();\n  }, [dispatch]);\n\n  const handleAddProduct = useCallback((id) => {\n    dispatch(CartActions.addToCartRequest(id));\n  }, [dispatch]);\n\n  return (\n    <ProductList>\n      {products === null ? (\n        <GridPlaceholder repeatCount={6} />\n      ) : (\n        products.map(product => (\n          <li key={product.id}>\n            <figure>\n              <img\n                src={product.image}\n                alt={product.title}\n                onClick={() => toggleModal(product.id)}\n              />\n            </figure>\n            <strong>{product.title}</strong>\n\n            <div>\n              <span>{product.priceFormatted}</span>\n\n              <button type=\"button\" onClick={() => handleAddProduct(product.id)}>\n                {product.loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={24} />\n                ) : (\n                  <div>\n                    <MdAddShoppingCart size={16} color=\"#FFF\" />\n                    {amount[product.id] || 0}\n                  </div>\n                )}\n\n                <span>ADD TO CART</span>\n              </button>\n            </div>\n          </li>\n        ))\n      )}\n\n      <ProductModal\n        isOpen={isOpenModal}\n        toggleModal={toggleModal}\n        selectedProductId={selectedProductId}\n        handleAddProduct={handleAddProduct}\n      />\n    </ProductList>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.main`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (max-width: 520px) {\n      flex-direction: column-reverse;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 180ms ease-in-out;\n\n      @media (max-width: 520px) {\n        margin-top: 20px;\n        width: 100%;\n        padding: 20px;\n      }\n\n      &:hover {\n        background: ${darken(0.04, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const EmptyCart = styled.section`\n  min-height: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: 560px) {\n    min-height: 400px;\n  }\n\n  svg {\n    font-size: 260px;\n    color: #f3f3f6;\n    position: absolute;\n  }\n\n  div {\n    z-index: 1;\n    text-align: center;\n\n    h2 {\n      font-size: 56px;\n    }\n\n    p {\n      margin: 12px 0 28px;\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const StartShopping = styled(Link)`\n    background: #7159c1;\n    color: #fff;\n    border: 0;\n    border-radius: 4px;\n    padding: 12px 20px;\n    font-weight: bold;\n    text-transform: uppercase;\n    transition: background 180ms ease-in-out;\n    text-decoration: none;\n    display: inline-block;\n\n    &:hover {\n      background: ${lighten(0.04, '#7159c1')};\n    }\n\n    &:active {\n      background: ${darken(0.04, '#7159c1')};\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  thead {\n    @media (max-width: 640px) {\n      display: none;\n    }\n  }\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n\n    &:nth-child(3) {\n      text-align: center;\n    }\n  }\n\n  tbody tr {\n    border-bottom: 1px solid #eee;\n    @media (max-width: 640px) {\n      display: flex;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n  }\n\n  tbody td {\n    padding: 12px;\n\n    &:first-child {\n      @media (max-width: 640px) {\n        padding-left: 0;\n        padding-bottom: 0;\n      }\n    }\n\n    &:nth-child(2) {\n      @media (max-width: 640px) {\n        flex: 1 1 60%;\n      }\n\n      @media (max-width: 385px) {\n        flex: 1;\n      }\n\n      span {\n        @media (max-width: 640px) {\n          font-size: 14px;\n          color: #666;\n        }\n      }\n    }\n\n    &:nth-child(3),\n    &:nth-child(4),\n    &:nth-child(5) {\n      @media (max-width: 640px) {\n        padding-top: 0;\n        padding-bottom: 0;\n      }\n    }\n\n    &:nth-child(3) {\n      @media (max-width: 640px) {\n        padding: 0;\n      }\n\n      @media (max-width: 356px) {\n        flex: 1;\n\n        div {\n          justify-content: flex-start;\n        }\n      }\n    }\n\n    &:nth-child(4) {\n      @media (max-width: 640px) {\n        flex: 1;\n        text-align: center;\n        font-size: 16px;\n      }\n\n      @media (max-width: 356px) {\n        display: none;\n      }\n    }\n\n    &:nth-child(5) {\n      @media (max-width: 640px) {\n        padding: 12px 0;\n      }\n    }\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 4px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 3px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n      text-align: center;\n\n      @media (max-width: 640px) {\n        width: 36px;\n      }\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px 8px;\n\n    svg {\n      @media (max-width: 640px) {\n        width: 24px;\n        height: 24px;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 8px;\n  }\n`;\n","import Cart from './Cart';\n\nexport default Cart;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdRemoveCircleOutline, MdAddCircleOutline, MdDelete, MdRemoveShoppingCart } from 'react-icons/md';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../utils/format';\nimport { Container, ProductTable, Total, EmptyCart, StartShopping } from './Cart_Styles';\n\nexport default function Cart() {\n  const total = useSelector(state =>\n    formatPrice(\n      state.cart.reduce((totalAmount, product) => {\n        return totalAmount + product.price * product.amount;\n      }, 0)\n    )\n  );\n\n  const cart = useSelector(state =>\n    state.cart.map(product => ({\n      ...product,\n      subtotal: formatPrice(product.price * product.amount),\n    }))\n  );\n\n  const dispatch = useDispatch();\n\n  function increment(product) {\n    dispatch(CartActions.updateAmountRequest(product.id, product.amount + 1));\n  }\n\n  function decrement(product) {\n    dispatch(CartActions.updateAmountRequest(product.id, product.amount - 1));\n  }\n\n  return (\n    <Container>\n      {cart.length === 0 ? (\n        <EmptyCart>\n          <MdRemoveShoppingCart />\n\n          <div>\n            <h2>Oops...</h2>\n            <p>Looks like your shopping cart is empty!</p>\n            <StartShopping to=\"/\">Start Shopping</StartShopping>\n          </div>\n        </EmptyCart>\n      ) : (\n        <>\n          <ProductTable>\n            <thead>\n              <tr>\n                <th />\n                <th>PRODUCT</th>\n                <th>AMOUNT</th>\n                <th>SUBTOTAL</th>\n              </tr>\n            </thead>\n            <tbody>\n              {cart.map(product => (\n                <tr key={product.id}>\n                  <td>\n                    <figure>\n                      <img src={product.image} alt={product.title} />\n                    </figure>\n                  </td>\n                  <td>\n                    <strong>{product.title}</strong>\n                    <span>{product.priceFormatted}</span>\n                  </td>\n                  <td>\n                    <div>\n                      <button type=\"button\" onClick={() => decrement(product)}>\n                        <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\n                      </button>\n                      <input type=\"text\" readOnly value={product.amount} />\n                      <button type=\"button\" onClick={() => increment(product)}>\n                        <MdAddCircleOutline size={20} color=\"#7159c1\" />\n                      </button>\n                    </div>\n                  </td>\n                  <td>\n                    <strong>{product.subtotal}</strong>\n                  </td>\n                  <td>\n                    <button type=\"button\" onClick={() => dispatch(CartActions.removeFromCart(product.id))}>\n                      <MdDelete size={20} color=\"#7159c1\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </ProductTable>\n\n          <footer>\n            <button type=\"submit\">Proceed to Checkout</button>\n            <Total>\n              <span>TOTAL:</span>\n              <strong>{total}</strong>\n            </Total>\n          </footer>\n        </>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 0;\n\n  > a figure img {\n    width: 100%;\n    max-width: 275px;\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 150ms ease-in-out;\n  position: relative;\n\n  @media (max-width: 430px) {\n    margin-left: 16px;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  & div {\n    text-align: right;\n    margin-right: 10px;\n\n    @media (max-width: 430px) {\n      display: none;\n    }\n\n    & strong {\n      display: block;\n      color: #fff;\n    }\n\n    & span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n\n  > span:last-child {\n    background: #7159c1;\n    color: #fff;\n    font-size: 11px;\n    line-height: 20px;\n    text-align: center;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    position: absolute;\n    right: -2px;\n    top: -6px;\n    display: none;\n\n    @media (max-width: 430px) {\n      display: initial;\n    }\n  }\n`;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingCart } from 'react-icons/md';\n\nimport { Container, Cart } from './Header_Styles';\nimport logo from '../../assets/images/logo.svg';\n\nexport default function Header() {\n  const cartSize = useSelector(state =>\n    state.cart.reduce((total, p) => {\n      return total + p.amount;\n    }, 0)\n  );\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <figure>\n          <img src={logo} alt=\"RocketShoes\" />\n        </figure>\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>My Cart</strong>\n          <span>{cartSize === 1 ? `${cartSize} product` : `${cartSize} products`}</span>\n        </div>\n        <MdShoppingCart size={36} color=\"#FFF\" />\n        <span>{cartSize}</span>\n      </Cart>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\nimport products from './products/reducer';\n\nexport default combineReducers({\n  cart,\n  products,\n});\n","import produce from 'immer';\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action;\n        draft.push(product);\n      });\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import produce from 'immer';\n\nexport default function products(state = null, action) {\n  switch (action.type) {\n    case '@products/STORE_PRODUCTS':\n      return action.products;\n\n    case '@products/SET_PRODUCT_STATUS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].loading = Number(action.status);\n        }\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\n// import history from '../../../services/history';\nimport { addToCartSuccess, updateAmountSuccess } from './actions';\nimport { setProductStatus } from '../products/actions';\nimport { formatPrice } from '../../../utils/format';\n\nfunction* addToCart({ id }) {\n  yield put(setProductStatus(id, true));\n\n  const productExists = yield select(state => state.cart.find(p => p.id === id));\n\n  const stock = yield call(api.get, `stock/${id}`);\n\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n\n  const amount = currentAmount + 1;\n\n  try {\n    if (amount > stockAmount) {\n      toast.error('Requested Amount is Out of Stock');\n      return;\n    }\n\n    if (productExists) {\n      yield put(updateAmountSuccess(id, amount));\n    } else {\n      const response = yield call(api.get, `products/${id}`);\n\n      const data = { ...response.data, amount: 1, priceFormatted: formatPrice(response.data.price) };\n\n      yield put(addToCartSuccess(data));\n      // history.push('/cart');\n    }\n  } finally {\n    yield put(setProductStatus(id, false));\n  }\n}\n\nfunction* updateAmount({ id, amount }) {\n  if (amount <= 0) return;\n\n  const stock = yield call(api.get, `stock/${id}`);\n  const stockAmount = stock.data.amount;\n\n  if (amount > stockAmount) {\n    toast.error('Product amount not available in stock');\n    return;\n  }\n\n  yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSaga() {\n  return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(sagaMiddleware)\n      )\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport GlobalStyles from './styles/global';\n\nimport Routes from './routes';\nimport Header from './components/Header';\n\nimport './config/ReactotronConfig';\nimport store from './store';\nimport history from './services/history';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <GlobalStyles />\n        <ToastContainer autoClose={3000} />\n        <Header />\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";"],"sourceRoot":""}